{"version":3,"sources":["components/BotaoCategoria.jsx","components/CardDeProduto.jsx","components/Footer.jsx","components/Header.jsx","services/api.js","services/localStorage.js","pages/Home.jsx","components/ProdutoNoCarrinho.jsx","pages/ShopCart.jsx","components/ProdutoNoCheckout.jsx","pages/Checkout.jsx","pages/PaginaProduto.jsx","App.js","serviceWorker.js","index.js"],"names":["BotaoCategoria","this","props","name","categoria","funk","type","data-testid","onClick","React","Component","CardDeProduto","item","thumbnail","price","title","id","className","src","alt","to","Footer","Header","width","API_CATEGORIES","API_SEARCH","API_PRODUCT","getCategories","a","fetch","fetchApi","json","response","getProductsFromCategoryAndQuery","categoryId","query","getProductsFromCategory","getProductsFromQuery","getProducts","productId","newItemOnCart","atualLocalStorage","localStorage","getItem","atualItems","JSON","parse","find","novoItem","quantity","newItems","setItem","stringify","getitensFromCart","getCommentsFromitem","Home","handleSearch","value","target","setState","itemPesquisado","selecionarCategoria","categoriaSelecionada","setProductByCat","searchQuery","state","setProductsByCatQuery","setProductsByQuery","c","api","retorno","itensEncontrados","results","carregando","categorias","map","key","onChange","e","length","index","cart","ProdutoNoCarrinho","plusQtn","prevState","qtn","minusQtn","produto","ShopCart","produtos","ProdutoNoCheckout","Checkout","total","somarProdutos","reduce","stotal","placeholder","PaginaProduto","submitReview","email","selectedRate","textArea","avaliacoes","avaliacao","match","params","ls","rate","description","htmlFor","rows","cols","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f9c53673.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass BotaoCategoria extends React.Component {\n  render() {\n    const { categoria: { name }, funk } = this.props;\n\n    return (\n      <button\n        type=\"button\"\n        data-testid=\"category\"\n        onClick={ funk }\n      >\n        {name}\n      </button>\n    );\n  }\n}\n\nBotaoCategoria.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n}.isRequired;\n\nexport default BotaoCategoria;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass CardDeProduto extends React.Component {\n  render() {\n    const { item, onClick } = this.props;\n    const { thumbnail, price, title, id } = item;\n    return (\n      <div className=\"card\" data-testid=\"product\">\n        <img src={ thumbnail } alt={ title } />\n        <div className=\"card-content\">\n          <h3>{title}</h3>\n          <p>\n            R$:\n            {' '}\n            {price}\n          </p>\n          <Link to={ `/produto/${id}` } data-testid=\"product-detail-link\">Ver Mais</Link>\n          <button type=\"button\" data-testid=\"product-add-to-cart\" onClick={ onClick }>\n            Comprar\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nCardDeProduto.propTypes = {\n  thumbnail: PropTypes.string,\n  price: PropTypes.number,\n  title: PropTypes.string,\n}.isRequired;\n\nexport default CardDeProduto;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"paiFooter\" />\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <div className=\"esquerdaContainer\">\n          <img src=\"/cart.png\" alt=\"logo\" width=\"50px\" />\n        </div>\n        <div className=\"direitaContainer\">\n          <Link\n            data-testid=\"shopping-cart-button\"\n            to=\"/cart\"\n          >\n            Meu Carrinho de Compras\n          </Link>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const API_CATEGORIES = 'https://api.mercadolibre.com/sites/MLB/categories';\nconst API_SEARCH = 'https://api.mercadolibre.com/sites/MLB/search?';\nconst API_PRODUCT = 'https://api.mercadolibre.com/items/';\n\nexport async function getCategories() {\n  const fetchApi = await fetch(API_CATEGORIES);\n  const response = await fetchApi.json();\n  return response;\n}\n\nexport async function getProductsFromCategoryAndQuery(categoryId, query) {\n  const fetchApi = await fetch(`${API_SEARCH}category=${categoryId}&q=${query}`);\n  const response = await fetchApi.json();\n  return response;\n}\n\nexport async function getProductsFromCategory(categoryId) {\n  const fetchApi = await fetch(`${API_SEARCH}category=${categoryId}`);\n  const response = await fetchApi.json();\n  return response;\n}\n\nexport async function getProductsFromQuery(query) {\n  const fetchApi = await fetch(`${API_SEARCH}q=${query}`);\n  const response = await fetchApi.json();\n  return response;\n}\n\nexport async function getProducts(productId) {\n  const fetchApi = await fetch(`${API_PRODUCT}${productId}`);\n  const response = await fetchApi.json();\n  return response;\n}\n","export function newItemOnCart({ title, id, price }) {\n  // Pega os itens do local\n  const atualLocalStorage = localStorage.getItem('cartItems');\n  const atualItems = atualLocalStorage ? JSON.parse(atualLocalStorage) : [];\n\n  // Interceptar Item Já Adicionado\n  if (atualItems.find((item) => item.id === id)) return;\n\n  // Adicionar um novo item\n  const novoItem = { title, id, price, quantity: 1 };\n  const newItems = [...atualItems, novoItem];\n  localStorage.setItem('cartItems', JSON.stringify(newItems));\n}\n\nexport function newComment({ email, selectedRate, textArea, productId }) {\n  // Pega os itens do local\n  const atualLocalStorage = localStorage.getItem(productId);\n  const atualItems = atualLocalStorage ? JSON.parse(atualLocalStorage) : [];\n\n  // Adicionar um novo item\n  const novoItem = { email, selectedRate, textArea };\n  const newItems = [...atualItems, novoItem];\n  localStorage.setItem(productId, JSON.stringify(newItems));\n}\n\nexport function getitensFromCart() {\n  const atualLocalStorage = localStorage.getItem('cartItems');\n  const atualItems = atualLocalStorage ? JSON.parse(atualLocalStorage) : [];\n  return atualItems;\n}\n\nexport function getCommentsFromitem(id) {\n  const atualLocalStorage = localStorage.getItem(id);\n  const atualItems = atualLocalStorage ? JSON.parse(atualLocalStorage) : [];\n  return atualItems;\n}\n","import React from 'react';\nimport BotaoCategoria from '../components/BotaoCategoria';\nimport CardDeProduto from '../components/CardDeProduto';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport * as api from '../services/api';\nimport * as cart from '../services/localStorage';\nimport '../style/Home.css';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      categorias: [],\n      categoriaSelecionada: '',\n      itemPesquisado: '',\n      itensEncontrados: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, async () => {\n      const categorias = await api.getCategories();\n      this.setState({ categorias, carregando: false });\n    });\n  }\n\n  handleSearch = ({ target: { value } }) => {\n    this.setState({\n      itemPesquisado: value,\n    });\n  }\n\n  selecionarCategoria = (categoriaSelecionada) => {\n    this.setState({\n      categoriaSelecionada,\n    }, () => { this.setProductByCat(); });\n  }\n\n  searchQuery = () => {\n    const { categoriaSelecionada } = this.state;\n    if (categoriaSelecionada) {\n      this.setProductsByCatQuery();\n    } else {\n      this.setProductsByQuery();\n    }\n  }\n\n  setProductsByCatQuery = async () => {\n    const { categoriaSelecionada: c, itemPesquisado } = this.state;\n    const retorno = await api.getProductsFromCategoryAndQuery(c, itemPesquisado);\n    const itensEncontrados = retorno.results;\n    this.setState({ itensEncontrados });\n  }\n\n  setProductByCat = async () => {\n    const { categoriaSelecionada: c } = this.state;\n    const retorno = await api.getProductsFromCategory(c);\n    const itensEncontrados = retorno.results;\n    this.setState({ itensEncontrados });\n  }\n\n  setProductsByQuery = async () => {\n    const { itemPesquisado } = this.state;\n    const retorno = await api.getProductsFromQuery(itemPesquisado);\n    const itensEncontrados = retorno.results;\n    this.setState({ itensEncontrados });\n  }\n\n  render() {\n    const { carregando, categorias, itensEncontrados } = this.state;\n\n    return (\n      <>\n        <Header />\n        <div className=\"paiHome borda\">\n\n          <div className=\"lateralEsquerda filtros borda\">\n            {!carregando && (categorias.map((categoria) => (<BotaoCategoria\n              key={ categoria.id }\n              categoria={ categoria }\n              funk={ () => this.selecionarCategoria(categoria.id) }\n            />)))}\n          </div>\n\n          <div className=\"centro borda\">\n            <div className=\"pesquisa\">\n              <input\n                type=\"text\"\n                data-testid=\"query-input\"\n                onChange={ (e) => this.handleSearch(e) }\n              />\n              <button\n                type=\"button\"\n                data-testid=\"query-button\"\n                onClick={ () => this.searchQuery() }\n              >\n                Pesquisar\n              </button>\n            </div>\n            <div className=\"produtos\">\n              { itensEncontrados.length\n                ? itensEncontrados.map((item, index) => (\n                  <CardDeProduto\n                    key={ index }\n                    item={ item }\n                    onClick={ () => cart.newItemOnCart(item) }\n                  />\n                ))\n                : (\n                  <p data-testid=\"home-initial-message\">\n                    Digite algum termo de pesquisa ou escolha uma categoria.\n                  </p>\n                )}\n            </div>\n          </div>\n\n          <div className=\"lateralDireita borda\" />\n\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default Home;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nclass ProdutoNoCarrinho extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      produto: {},\n      qtn: 1,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, async () => {\n      const { produto } = this.props;\n      const { quantity } = produto;\n      this.setState({ produto, qtn: quantity, carregando: false });\n    });\n  }\n\n  plusQtn = () => {\n    this.setState((prevState) => ({\n      ...prevState,\n      qtn: prevState.qtn + 1,\n    }));\n  }\n\n  minusQtn = () => {\n    const { qtn } = this.state;\n    if (qtn === 0) {\n      this.setState({ qtn: 0 });\n    } else {\n      this.setState((prevState) => ({\n        ...prevState,\n        qtn: prevState.qtn - 1,\n      }));\n    }\n  }\n\n  render() {\n    const { carregando, produto, qtn } = this.state;\n\n    return (\n      <div>\n        {carregando\n          ? <p>Carregando...</p>\n          : (\n            <div>\n              <p data-testid=\"shopping-cart-product-name\">\n                {`${produto.title} | R$${produto.price}`}\n              </p>\n              <button\n                type=\"button\"\n                data-testid=\"product-decrease-quantity\"\n                onClick={ () => this.minusQtn() }\n              >\n                -\n              </button>\n              <p data-testid=\"shopping-cart-product-quantity\">{ qtn }</p>\n              <button\n                type=\"button\"\n                data-testid=\"product-increase-quantity\"\n                onClick={ () => this.plusQtn() }\n              >\n                +\n              </button>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nProdutoNoCarrinho.propTypes = {\n  id: PropTypes.string,\n}.isRequired;\n\nexport default ProdutoNoCarrinho;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport ProdutoNoCarrinho from '../components/ProdutoNoCarrinho';\nimport * as cart from '../services/localStorage';\n\nclass ShopCart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      produtos: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, async () => {\n      const produtos = await cart.getitensFromCart();\n      this.setState({ produtos, carregando: false });\n    });\n  }\n\n  render() {\n    const { carregando, produtos } = this.state;\n\n    return (\n      <>\n        <Header />\n        <div>\n          <h1 data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</h1>\n          {\n            carregando\n              ? <p>Carregando...</p>\n              : (\n                <div>\n                  {!produtos.length ? <p>Seu carrinho está vazio</p>\n                    : (\n                      <div>\n                        <h1>Produtos</h1>\n                        {produtos.map((produto, index) => (<ProdutoNoCarrinho\n                          key={ index }\n                          produto={ produto }\n                        />))}\n                      </div>\n                    )}\n                </div>\n              )\n          }\n          <Link\n            data-testid=\"checkout-products\"\n            to=\"/checkout\"\n          >\n            Finalizar Compra\n          </Link>\n        </div>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default ShopCart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProdutoNoCheckout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      produto: {},\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, () => {\n      const { produto } = this.props;\n      this.setState({ produto, carregando: false });\n    });\n  }\n\n  render() {\n    const { carregando, produto } = this.state;\n\n    return (\n      <div key={ produto.id }>\n        {carregando ? (<p>Carregando...</p>) : (\n          <>\n            <span><strong>{produto.title}</strong></span>\n            <p>\n              Valor Unitário: R$\n              {produto.price}\n            </p>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nProdutoNoCheckout.propTypes = {\n  produto: PropTypes.string,\n}.isRequired;\n\nexport default ProdutoNoCheckout;\n","import React from 'react';\nimport ProdutoNoCheckout from '../components/ProdutoNoCheckout';\nimport * as cart from '../services/localStorage';\nimport '../index.css';\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      produtos: [],\n      total: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, async () => {\n      const produtos = await cart.getitensFromCart();\n      this.setState({ produtos, carregando: false }, () => { this.somarProdutos(); });\n    });\n  }\n\n  somarProdutos() {\n    const { produtos } = this.state;\n    const total = produtos.reduce((stotal, produto) => stotal + produto.price, 0);\n    this.setState({ total });\n  }\n\n  render() {\n    const { carregando, produtos, total } = this.state;\n\n    return (\n      <div>\n        <h2>Produtos</h2>\n        {carregando && <p>Carregando...</p>}\n        {produtos.map((produto, index) => (\n          <ProdutoNoCheckout key={ index } produto={ produto } />\n        ))}\n        <div>\n          <hr />\n          <h2>Total</h2>\n          <p>\n            R$\n            {total}\n          </p>\n        </div>\n        <div>\n          <hr />\n          <h2>Dados Cadastrais</h2>\n          <form className=\"form-horizontal\">\n            <input\n              type=\"text\"\n              placeholder=\"nome completo\"\n              data-testid=\"checkout-fullname\"\n            />\n            <input type=\"text\" placeholder=\"email\" data-testid=\"checkout-email\" />\n            <input type=\"text\" placeholder=\"CPF\" data-testid=\"checkout-cpf\" />\n            <input type=\"text\" placeholder=\"telefone\" data-testid=\"checkout-phone\" />\n            <input type=\"text\" placeholder=\"CEP\" data-testid=\"checkout-cep\" />\n            <input\n              type=\"text\"\n              placeholder=\"endereço\"\n              data-testid=\"checkout-address\"\n            />\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Checkout;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport * as api from '../services/api';\nimport * as ls from '../services/localStorage';\n\nclass PaginaProduto extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      carregando: true,\n      rate: ['1', '2', '3', '4', '5'],\n      selectedRate: '1',\n      produto: {},\n      email: '',\n      textArea: '',\n      avaliacoes: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ carregando: true }, async () => {\n      const { match: { params: { id } } } = this.props;\n      const produto = await api.getProducts(id);\n      const avaliacoes = ls.getCommentsFromitem(id);\n      this.setState({ carregando: false, produto, avaliacoes });\n    });\n  }\n\n  submitReview = () => {\n    const { email, selectedRate, textArea, avaliacoes } = this.state;\n    const { match: { params: { id } } } = this.props;\n    const avaliacao = {\n      email,\n      selectedRate,\n      textArea,\n      productId: id,\n    };\n\n    ls.newComment(avaliacao);\n    this.setState({ avaliacoes: [...avaliacoes, avaliacao] });\n  }\n\n  render() {\n    const { carregando, produto, rate, avaliacoes } = this.state;\n    return (\n      <div className=\"pagina-produto\">\n        <Header />\n        {carregando\n          ? (\n            <h2>Carregando...</h2>\n          )\n          : (\n            <>\n              <div>\n                <h1 data-testid=\"product-detail-name\">{produto.title}</h1>\n                <h2>{`R$ ${produto.price}`}</h2>\n                <img src={ produto.thumbnail } alt={ produto.title } />\n                <p>{produto.description}</p>\n                <p>{`ID: ${produto.id}`}</p>\n                <button\n                  type=\"button\"\n                  data-testid=\"product-detail-add-to-cart\"\n                  onClick={ () => ls.newItemOnCart(produto) }\n                >\n                  Comprar\n                </button>\n              </div>\n              <div className=\"formAvaliacao\">\n                <h2>Avalie o produto</h2>\n                <form>\n                  <input\n                    data-testid=\"product-detail-email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    onChange={ ({ target }) => this.setState({ email: target.value }) }\n                  />\n                  {rate.map((item, index) => (\n                    <label key={ index } htmlFor={ item }>\n                      {item}\n                      <input\n                        key={ index }\n                        data-testid={ `${item}-rating` }\n                        type=\"radio\"\n                        id={ item }\n                        name=\"avaliacao\"\n                        value={ item }\n                        onChange={ ({ target }) => this.setState({\n                          selectedRate: target.value }) }\n                      />\n                    </label>\n                  ))}\n                  <textarea\n                    data-testid=\"product-detail-evaluation\"\n                    rows=\"5\"\n                    cols=\"33\"\n                    placeholder=\"Comentarios\"\n                    onChange={ ({ target }) => this.setState({ textArea: target.value }) }\n                  />\n                  <button\n                    data-testid=\"submit-review-btn\"\n                    type=\"button\"\n                    onClick={ () => this.submitReview() }\n                  >\n                    Enviar\n                  </button>\n                </form>\n              </div>\n              <div className=\"avaliacoes\">\n                {avaliacoes.map((item, index) => (\n                  <div key={ index }>\n                    <h3>{item.email}</h3>\n                    <p key={ index }>{item.textArea}</p>\n                    <p>{`Nota: ${item.selectedRate}`}</p>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nPaginaProduto.propTypes = {\n  match: PropTypes.shape({ params: PropTypes.shape({ id: PropTypes.string }) }),\n}.isRequired;\n\nexport default PaginaProduto;\n","import React from 'react';\nimport { BrowserRouter, HashRouter, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport ShopCart from './pages/ShopCart';\nimport Checkout from './pages/Checkout';\nimport PaginaProduto from './pages/PaginaProduto';\n\n// Branch Release\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <BrowserRouter>\n          <HashRouter basename=\"/\">\n            <Switch>\n              <Route exact path=\"/produto/:id\" component={ PaginaProduto } />\n              <Route exact path=\"/cart\" component={ ShopCart } />\n              <Route exact path=\"/checkout\" component={ Checkout } />\n              <Route exact path=\"/\" component={ Home } />\n            </Switch>\n          </HashRouter>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  const NOT_FOUND = 404;\n  const NOT_FOUND_IN_ARRAY = -1;\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  }).then((response) => {\n    // Ensure service worker exists, and that we really are getting a JS file.\n    const contentType = response.headers.get('content-type');\n    if (response.status === NOT_FOUND\n        || (contentType != null\n          && contentType.indexOf('javascript') === NOT_FOUND_IN_ARRAY)) {\n      // No service worker found. Probably a different app. Reload the page.\n      navigator.serviceWorker.ready.then((registration) => {\n        registration.unregister().then(() => {\n          window.location.reload();\n        });\n      });\n    } else {\n      // Service worker found. Proceed as normal.\n      registerValidSW(swUrl, config);\n    }\n  })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}